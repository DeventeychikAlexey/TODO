{"version":3,"sources":["scripts/todo.js","scripts/script.js"],"names":["Todo","selector","$el","document","querySelector","list","text","push","title","checked","$input","value","id","i","length","event","type","target","dataset","toggleActiveBtn","$sortButtons","forEach","el","classList","remove","add","bind","item","closest","removeItem","clearAll","newList","filter","toggleChecked","saveAll","destroy","key","window","localStorage","setItem","JSON","stringify","$title","removeEventListener","clickHandlers","keyHandlers","parentNode","removeChild","innerHTML","count","$list","map","join","getItem","parse","$add","querySelectorAll","addEventListener"],"mappings":"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","file":"script.022b6480.js","sourceRoot":"..\\src","sourcesContent":["export class Todo {\r\n  constructor(selector) {\r\n    this.$el = document.querySelector(`${selector}`);\r\n    this.selector = selector;\r\n\r\n    this.#setupStorage();\r\n    this.#renderAll();\r\n\r\n    this.#setup();\r\n    this.#renderList(this.list);\r\n  }\r\n\r\n  #renderAll() {\r\n    this.$el.classList.add(\"todo\");\r\n    this.$el.innerHTML = `\r\n    <div class=\"todo__head\">\r\n            <input type=\"text\" data-type=\"title\" value=\"${this.$title}\" />\r\n            <button class=\"btn btn-danger\" data-type=\"destroy\">✖</button>\r\n          </div>\r\n          <div class=\"todo__body todo-body\">\r\n            <div class=\"todo-body__sorting\">\r\n              <button class=\"btn btn-secondary\" data-sort data-type=\"checked\">Выполненные</button>\r\n              <button class=\"btn btn-secondary\" data-sort data-type=\"notChecked\">Не выполненные</button>\r\n              <button class=\"btn btn-info\" data-sort data-type=\"all\">Все</button>\r\n            </div>\r\n            <div class=\"todo-body__input input-group\" >\r\n              <input data-type=\"input\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Новый элемент\"\r\n              />\r\n              <button class=\"btn btn-success\" data-type=\"add\">\r\n                <i data-type=\"add-i\" class=\"fas fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n            <ul class=\"list-group list-group-flush todo-body__list\" data-list> </ul>\r\n            <div class=\"todo-body__buttons\">\r\n              <button class=\"btn btn-success\"  data-type=\"save\">Сохранить изменения</button>\r\n              <button class=\"btn btn-danger\" data-type=\"clear\">Очистить список</button>\r\n            </div>\r\n          </div>`;\r\n  }\r\n\r\n  #renderList(list) {\r\n    let count = 1;\r\n    this.$list.innerHTML =\r\n      list\r\n        .map((el) => {\r\n          el.id = count;\r\n          return `\r\n  <li class=\"list-group-item todo-body__item ${\r\n    el.checked ? \"checked\" : \"\"\r\n  }\" data-type=\"item\" data-id=\"${count}\"\">\r\n  \r\n  <label for=\"check${count}\"\r\n    ><span>${count}. </span>${el.title}</label\r\n  >\r\n  <button id=\"check${count++}\" class=\"btn btn-success\" data-type=\"check\">\r\n    <i class=\"fas fa-check\" data-type=\"check-i\"></i>\r\n  </button>\r\n  <button class=\"btn btn-danger\" data-type=\"remove\">\r\n    <i class=\"fas fa-trash-alt\" data-type=\"remove-i\"></i>\r\n  </button>\r\n</li>`;\r\n        })\r\n        .join(\"\") || \"<p class='empty'>Список пуст</p>\";\r\n  }\r\n\r\n  #setupStorage() {\r\n    this.list = window.localStorage.getItem(`${this.selector}-list`)\r\n      ? JSON.parse(window.localStorage.getItem(`${this.selector}-list`))\r\n      : [];\r\n    this.$title = window.localStorage.getItem(`${this.selector}-title`)\r\n      ? JSON.parse(window.localStorage.getItem(`${this.selector}-title`))\r\n      : \"Todo List\";\r\n  }\r\n\r\n  #setup() {\r\n    this.$list = this.$el.querySelector(`[data-list]`);\r\n    this.$input = this.$el.querySelector(`[data-type=\"input\"]`);\r\n    this.$add = this.$el.querySelector('[data-type=\"add\"]');\r\n    this.$title = this.$el.querySelector('[data-type=\"title\"]');\r\n    this.$sortButtons = this.$el.querySelectorAll(\"[data-sort]\");\r\n\r\n    this.clickHandlers = this.clickHandlers.bind(this);\r\n    this.$el.addEventListener(\"click\", this.clickHandlers);\r\n\r\n    this.keyHandlers = this.keyHandlers.bind(this);\r\n    this.$el.addEventListener(\"keypress\", this.keyHandlers);\r\n  }\r\n\r\n  add(text) {\r\n    if (text) {\r\n      this.list.push({\r\n        title: text,\r\n        checked: false,\r\n      });\r\n      this.$input.value = \"\";\r\n    }\r\n  }\r\n\r\n  toggleChecked(id) {\r\n    for (let i = 0; i < this.list.length; ++i) {\r\n      if (this.list[i].id === id) {\r\n        this.list[i].checked = !this.list[i].checked;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  clickHandlers(event) {\r\n    const { type } = event.target.dataset;\r\n\r\n    function toggleActiveBtn() {\r\n      this.$sortButtons.forEach((el) => {\r\n        el.classList.remove(\"btn-info\");\r\n        el.classList.add(\"btn-secondary\");\r\n      });\r\n      event.target.classList.add(\"btn-info\");\r\n      event.target.classList.remove(\"btn-secondary\");\r\n    }\r\n\r\n    toggleActiveBtn = toggleActiveBtn.bind(this);\r\n\r\n    if (type === \"add\" || type === \"add-i\") {\r\n      this.add(this.$input.value);\r\n      this.#renderList(this.list);\r\n    } else if (type === \"remove\" || type === \"remove-i\") {\r\n      const item = event.target.closest(\".list-group-item\");\r\n      this.removeItem(+item.dataset.id);\r\n      this.#renderList(this.list);\r\n    } else if (type === \"clear\") {\r\n      this.clearAll();\r\n      this.#renderList(this.list);\r\n    } else if (type === \"checked\") {\r\n      toggleActiveBtn();\r\n      const newList = this.list.filter((el) => el.checked === true);\r\n      this.#renderList(newList);\r\n    } else if (type === \"notChecked\") {\r\n      toggleActiveBtn();\r\n      const newList = this.list.filter((el) => el.checked === false);\r\n      this.#renderList(newList);\r\n    } else if (type === \"all\") {\r\n      toggleActiveBtn();\r\n      this.#renderList(this.list);\r\n    } else if (type === \"check\" || type === \"check-i\") {\r\n      const item = event.target.closest(\".list-group-item\");\r\n      this.toggleChecked(+item.dataset.id);\r\n      this.#renderList(this.list);\r\n    } else if (type === \"save\") {\r\n      this.saveAll();\r\n    } else if (type === \"destroy\") {\r\n      this.destroy();\r\n    }\r\n  }\r\n\r\n  keyHandlers(event) {\r\n    const { type } = event.target.dataset;\r\n\r\n    if (type === \"input\") {\r\n      if (event.key === \"Enter\") {\r\n        this.add(this.$input.value);\r\n        this.#renderList(this.list);\r\n      }\r\n    }\r\n  }\r\n\r\n  clearAll() {\r\n    this.list = [];\r\n  }\r\n\r\n  removeItem(id) {\r\n    this.list = this.list.filter((el) => el.id != id);\r\n  }\r\n\r\n  saveAll() {\r\n    window.localStorage.setItem(\r\n      `${this.selector}-list`,\r\n      JSON.stringify(this.list)\r\n    );\r\n\r\n    window.localStorage.setItem(\r\n      `${this.selector}-title`,\r\n      JSON.stringify(this.$title.value)\r\n    );\r\n  }\r\n\r\n  destroy() {\r\n    this.$el.removeEventListener(\"click\", this.clickHandlers);\r\n    this.$el.removeEventListener(\"keypress\", this.keyHandlers);\r\n    this.$el.parentNode.removeChild(this.$el);\r\n    window.localStorage.removeItem(`${this.selector}-list`);\r\n    window.localStorage.removeItem(`${this.selector}-title`);\r\n  }\r\n}\r\n","import \"../styles/normalize.css\";\r\nimport { Todo } from \"./todo\";\r\nimport \"../styles/style.scss\";\r\nimport \"../styles/todo.scss\";\r\n\r\nnew Todo(\"#todo\");\r\n"]}